name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Крок 1: Клонуємо репозиторій
      - name: Checkout code
        uses: actions/checkout@v3

      # Крок 2: Логін в DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Крок 3: Встановлення Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Крок 4: Запуск контейнерів через docker-compose
      - name: Start containers
        run: docker-compose up -d

      # Крок 5: Інсталяція залежностей через Composer
      - name: Install PHP dependencies
        run: docker exec ecommerce-website-app composer install

      # Крок 6: Запуск PHPUnit тестів у контейнері
      - name: Run PHPUnit tests in Docker container
        run: docker exec ecommerce-website-app ./vendor/bin/phpunit

      # Крок 7: Зупинка контейнерів
      - name: Stop containers
        run: docker-compose down

  build-docker:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Крок 1: Клонуємо репозиторій
      - name: Checkout code
        uses: actions/checkout@v3

      # Крок 2: Логін в DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Крок 3: Створення Docker образу
      - name: Build Docker image
        run: docker build -t juliakalinka/ecommerce-app:${{ github.sha }} .

      # Крок 4: Перевірка наявності образу в локальному сховищі
      - name: Check if image exists
        run: docker images

      # Крок 5: Пуш Docker образу на DockerHub
      - name: Push Docker image to DockerHub
        run: docker push juliakalinka/ecommerce-app:${{ github.sha }}
